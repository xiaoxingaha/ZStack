///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V7.51A/W32 for 8051               01/Dec/2011  14:24:49 /
// Copyright 2004-2009 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Components\hal\target\CC2530EB\h /
//                          al_uart.c                                         /
//    Command line       =  -f F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐ /
//                          ò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4. /
//                          0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Simpl /
//                          eApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cf /
//                          g (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS)    /
//                          -f F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐ /
//                          ò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4. /
//                          0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Simpl /
//                          eApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.c /
//                          fg (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR  /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì× /
//                          ¼þ¹âÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZSta /
//                          ck-CC2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Component /
//                          s\hal\target\CC2530EB\hal_uart.c -D               /
//                          NWK_AUTO_POLL -D HOLD_AUTO_START -D REFLECTOR -D  /
//                          POWER_SAVING -D NV_INIT -D xNV_RESTORE -D         /
//                          xZTOOL_P1 -D xMT_TASK -D xMT_SYS_FUNC -D          /
//                          xMT_SAPI_FUNC -D xMT_SAPI_CB_FUNC -lC             /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\SimpleSensorEB\List\ -lA               /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\SimpleSensorEB\List\ --diag_suppress   /
//                          Pe001,Pa010 -o F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\1 /
//                          0__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC253 /
//                          0-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\S /
//                          amples\SimpleApp\CC2530DB\SimpleSensorEB\Obj\ -e  /
//                          --require_prototypes --debug --core=plain         /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 8 -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì× /
//                          ¼þ¹âÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZSta /
//                          ck-CC2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\ /
//                          zstack\Samples\SimpleApp\CC2530DB\ -I             /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\SOURCE\ -I                          /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\..\..\ZMAIN\TI2530DB\ -I            /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\MT\ -I       /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ /
//                           -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³Ì /
//                          Ðò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4 /
//                          .0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Simp /
//                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARG /
//                          ET\CC2530EB\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\ /
//                          10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC25 /
//                          30-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\ /
//                          Samples\SimpleApp\CC2530DB\..\..\..\..\..\COMPONE /
//                          NTS\OSAL\MCU\CCSOC\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì× /
//                          ¼þ¹âÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZSta /
//                          ck-CC2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\ /
//                          zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\OSAL\INCLUDE\ -I                       /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\    /
//                          -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐ /
//                          ò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4. /
//                          0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Simpl /
//                          eApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK /
//                          \ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ /
//                          ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1. /
//                          4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Sim /
//                          pleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK\S /
//                          EC\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC253 /
//                          0³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0- /
//                          1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\S /
//                          impleApp\CC2530DB\..\..\..\..\..\COMPONENTS\STACK /
//                          \SAPI\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC /
//                          2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3 /
//                          .0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Sample /
//                          s\SimpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\SYS\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__ /
//                          CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2 /
//                          .3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samp /
//                          les\SimpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          STACK\ZDO\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10 /
//                          __CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530 /
//                          -2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Sa /
//                          mples\SimpleApp\CC2530DB\..\..\..\..\..\COMPONENT /
//                          S\ZMAC\F8W\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\1 /
//                          0__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC253 /
//                          0-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\S /
//                          amples\SimpleApp\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\ZMAC\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__ /
//                          CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2 /
//                          .3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samp /
//                          les\SimpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          SERVICES\SADDR\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹â /
//                          ÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-C /
//                          C2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zsta /
//                          ck\Samples\SimpleApp\CC2530DB\..\..\..\..\..\COMP /
//                          ONENTS\SERVICES\SDATA\ -I                         /
//                          F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\ /
//                           -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³Ì /
//                          Ðò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4 /
//                          .0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\Simp /
//                          leApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH /
//                          _LEVEL\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__C /
//                          C2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2. /
//                          3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Sampl /
//                          es\SimpleApp\CC2530DB\..\..\..\..\..\COMPONENTS\M /
//                          AC\LOW_LEVEL\srf04\ -I F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì× /
//                          ¼þ¹âÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZSta /
//                          ck-CC2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\ /
//                          zstack\Samples\SimpleApp\CC2530DB\..\..\..\..\..\ /
//                          COMPONENTS\MAC\LOW_LEVEL\srf04\SINGLE_CHIP\ -I    /
//                          "C:\Program Files\IAR Systems\Embedded Workbench  /
//                          5.3 Evaluation version\8051\INC\" -I "C:\Program  /
//                          Files\IAR Systems\Embedded Workbench 5.3          /
//                          Evaluation version\8051\INC\CLIB\" -Ohz           /
//    List file          =  F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°ü /
//                          B_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á /
//                          ½¸öÊµÑé_×¨ÒµÉÐÑô\Projects\zstack\Samples\SimpleAp /
//                          p\CC2530DB\SimpleSensorEB\List\hal_uart.s51       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_uart

        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET

        PUBLIC ??HalUARTInit?relay
        FUNCTION ??HalUARTInit?relay,0203H
        PUBLIC ??HalUARTOpen?relay
        FUNCTION ??HalUARTOpen?relay,0203H
        PUBLIC ??HalUARTPoll?relay
        FUNCTION ??HalUARTPoll?relay,0203H
        PUBLIC ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,0203H
        PUBLIC ??HalUARTResume?relay
        FUNCTION ??HalUARTResume?relay,0203H
        PUBLIC ??HalUARTSuspend?relay
        FUNCTION ??HalUARTSuspend?relay,0203H
        PUBLIC ??HalUARTWrite?relay
        FUNCTION ??HalUARTWrite?relay,0203H
        PUBLIC ??Hal_UART_RxBufLen?relay
        FUNCTION ??Hal_UART_RxBufLen?relay,0203H
        PUBLIC HalUARTInit
        FUNCTION HalUARTInit,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTOpen
        FUNCTION HalUARTOpen,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTPoll
        FUNCTION HalUARTPoll,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTRead
        FUNCTION HalUARTRead,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTResume
        FUNCTION HalUARTResume,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTSuspend
        FUNCTION HalUARTSuspend,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC HalUARTWrite
        FUNCTION HalUARTWrite,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC Hal_UART_RxBufLen
        FUNCTION Hal_UART_RxBufLen,0203H
        ARGFRAME XSTACK, 0, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
HalUARTInit         SYMBOL "HalUARTInit"
??HalUARTInit?relay SYMBOL "?relay", HalUARTInit
HalUARTOpen         SYMBOL "HalUARTOpen"
??HalUARTOpen?relay SYMBOL "?relay", HalUARTOpen
HalUARTPoll         SYMBOL "HalUARTPoll"
??HalUARTPoll?relay SYMBOL "?relay", HalUARTPoll
HalUARTRead         SYMBOL "HalUARTRead"
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
HalUARTResume       SYMBOL "HalUARTResume"
??HalUARTResume?relay SYMBOL "?relay", HalUARTResume
HalUARTSuspend      SYMBOL "HalUARTSuspend"
??HalUARTSuspend?relay SYMBOL "?relay", HalUARTSuspend
HalUARTWrite        SYMBOL "HalUARTWrite"
??HalUARTWrite?relay SYMBOL "?relay", HalUARTWrite
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
??Hal_UART_RxBufLen?relay SYMBOL "?relay", Hal_UART_RxBufLen

// F:\fancong\×ÊÁÏ\ÉÐÑô2530Ì×¼þ¹âÅÌ\10__CC2530³ÌÐò°üB_Ð­ÒéÕ»ÊµÑé\Ê®ºÍÊ®¶þ_ZStack-CC2530-2.3.0-1.4.0_Á½¸öÊµÑé_×¨ÒµÉÐÑô\Components\hal\target\CC2530EB\hal_uart.c
//    1 /**************************************************************************************************
//    2   Filename:       _hal_uart.c
//    3   Revised:        $Date: 2009-03-19 15:13:41 -0700 (Thu, 19 Mar 2009) $
//    4   Revision:       $Revision: 19475 $
//    5 
//    6   Description: This file contains the interface to the H/W UART driver.
//    7 
//    8 
//    9   Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 
//   44 #include "hal_board_cfg.h"
//   45 #include "hal_defs.h"
//   46 #include "hal_types.h"
//   47 #include "hal_uart.h"
//   48 
//   49 /*********************************************************************
//   50  * MACROS
//   51  */
//   52 
//   53 /*********************************************************************
//   54  * TYPEDEFS
//   55  */
//   56 
//   57 /*********************************************************************
//   58  * CONSTANTS
//   59  */
//   60 
//   61 /*********************************************************************
//   62  * GLOBAL VARIABLES
//   63  */
//   64 
//   65 /*********************************************************************
//   66  * GLOBAL FUNCTIONS
//   67  */
//   68 
//   69 /*********************************************************************
//   70  * LOCAL VARIABLES
//   71  */
//   72 
//   73 /*********************************************************************
//   74  * LOCAL FUNCTIONS
//   75  */
//   76 
//   77 #if HAL_UART_DMA
//   78 #include "_hal_uart_dma.c"
//   79 #endif
//   80 #if HAL_UART_ISR
//   81 #include "_hal_uart_isr.c"
//   82 #endif
//   83 
//   84 /******************************************************************************
//   85  * @fn      HalUARTInit
//   86  *
//   87  * @brief   Initialize the UART
//   88  *
//   89  * @param   none
//   90  *
//   91  * @return  none
//   92  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   93 void HalUARTInit(void)
HalUARTInit:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function HalUARTInit
//   94 {
        ; Saved register size: 0
        ; Auto size: 0
//   95 #if HAL_UART_DMA
//   96   HalUARTInitDMA();
//   97 #endif
//   98 #if HAL_UART_ISR
//   99   HalUARTInitISR();
//  100 #endif
//  101 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//  102 
//  103 /******************************************************************************
//  104  * @fn      HalUARTOpen
//  105  *
//  106  * @brief   Open a port according tp the configuration specified by parameter.
//  107  *
//  108  * @param   port   - UART port
//  109  *          config - contains configuration information
//  110  *
//  111  * @return  Status of the function call
//  112  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  113 uint8 HalUARTOpen(uint8 port, halUARTCfg_t *config)
HalUARTOpen:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function HalUARTOpen
//  114 {
        ; Saved register size: 0
        ; Auto size: 0
//  115 #if (HAL_UART_DMA == 1)
//  116   if (port == HAL_UART_PORT_0)  HalUARTOpenDMA(config);
//  117 #endif
//  118 #if (HAL_UART_DMA == 2)
//  119   if (port == HAL_UART_PORT_1)  HalUARTOpenDMA(config);
//  120 #endif
//  121 #if (HAL_UART_ISR == 1)
//  122   if (port == HAL_UART_PORT_0)  HalUARTOpenISR(config);
//  123 #endif
//  124 #if (HAL_UART_ISR == 2)
//  125   if (port == HAL_UART_PORT_1)  HalUARTOpenISR(config);
//  126 #endif
//  127   
//  128 #if (HAL_UART_DMA == 0) && (HAL_UART_ISR == 0)
//  129   // UART is not enabled. Do nothing.
//  130   (void) port;   // unused argument
//  131   (void) config; // unused argument
//  132 #endif
//  133   
//  134   return HAL_UART_SUCCESS;
        MOV     R1,#0x0
        LJMP    ?BRET
        CFI EndBlock cfiBlock1
//  135 }
//  136 
//  137 /*****************************************************************************
//  138  * @fn      HalUARTRead
//  139  *
//  140  * @brief   Read a buffer from the UART
//  141  *
//  142  * @param   port - USART module designation
//  143  *          buf  - valid data buffer at least 'len' bytes in size
//  144  *          len  - max length number of bytes to copy to 'buf'
//  145  *
//  146  * @return  length of buffer that was read
//  147  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  148 uint16 HalUARTRead(uint8 port, uint8 *buf, uint16 len)
HalUARTRead:
//  149 {
        ; Saved register size: 0
        ; Auto size: 0
//  150 #if (HAL_UART_DMA == 1)
//  151   if (port == HAL_UART_PORT_0)  return HalUARTReadDMA(buf, len);
//  152 #endif
//  153 #if (HAL_UART_DMA == 2)
//  154   if (port == HAL_UART_PORT_1)  return HalUARTReadDMA(buf, len);
//  155 #endif
//  156 #if (HAL_UART_ISR == 1)
//  157   if (port == HAL_UART_PORT_0)  return HalUARTReadISR(buf, len);
//  158 #endif
//  159 #if (HAL_UART_ISR == 2)
//  160   if (port == HAL_UART_PORT_1)  return HalUARTReadISR(buf, len);
//  161 #endif
//  162 
//  163 #if (HAL_UART_DMA == 0) && (HAL_UART_ISR == 0)
//  164   // UART is not enabled. Do nothing.
//  165   // Unused arguments
//  166   (void) port;
//  167   (void) buf;
//  168   (void) len;
//  169 #endif
//  170   return 0;
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//  171 }
//  172 
//  173 /******************************************************************************
//  174  * @fn      HalUARTWrite
//  175  *
//  176  * @brief   Write a buffer to the UART.
//  177  *
//  178  * @param   port - UART port
//  179  *          buf  - pointer to the buffer that will be written, not freed
//  180  *          len  - length of
//  181  *
//  182  * @return  length of the buffer that was sent
//  183  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  184 uint16 HalUARTWrite(uint8 port, uint8 *buf, uint16 len)
HalUARTWrite:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function HalUARTWrite
//  185 {
        ; Saved register size: 0
        ; Auto size: 0
//  186 #if (HAL_UART_DMA == 1)
//  187   if (port == HAL_UART_PORT_0)  return HalUARTWriteDMA(buf, len);
//  188 #endif
//  189 #if (HAL_UART_DMA == 2)
//  190   if (port == HAL_UART_PORT_1)  return HalUARTWriteDMA(buf, len);
//  191 #endif
//  192 #if (HAL_UART_ISR == 1)
//  193   if (port == HAL_UART_PORT_0)  return HalUARTWriteISR(buf, len);
//  194 #endif
//  195 #if (HAL_UART_ISR == 2)
//  196   if (port == HAL_UART_PORT_1)  return HalUARTWriteISR(buf, len);
//  197 #endif
//  198 
//  199 #if (HAL_UART_DMA == 0) && (HAL_UART_ISR == 0)
//  200   // UART is not enabled. Do nothing.
//  201   // Unused arguments
//  202   (void) port;
//  203   (void) buf;
//  204   (void) len;
//  205 #endif
//  206   return 0;
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock3
//  207 }
//  208 
//  209 /******************************************************************************
//  210  * @fn      HalUARTSuspend
//  211  *
//  212  * @brief   Suspend UART hardware before entering PM mode 1, 2 or 3.
//  213  *
//  214  * @param   None
//  215  *
//  216  * @return  None
//  217  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  218 void HalUARTSuspend( void )
HalUARTSuspend:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function HalUARTSuspend
//  219 {
        ; Saved register size: 0
        ; Auto size: 0
//  220 #if HAL_UART_DMA
//  221   HalUARTSuspendDMA();
//  222 #endif
//  223 #if HAL_UART_ISR
//  224   HalUARTSuspendISR();
//  225 #endif
//  226 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock4
//  227 
//  228 /******************************************************************************
//  229  * @fn      HalUARTResume
//  230  *
//  231  * @brief   Resume UART hardware after exiting PM mode 1, 2 or 3.
//  232  *
//  233  * @param   None
//  234  *
//  235  * @return  None
//  236  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  237 void HalUARTResume( void )
HalUARTResume:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function HalUARTResume
//  238 {
        ; Saved register size: 0
        ; Auto size: 0
//  239 #if HAL_UART_DMA
//  240   HalUARTResumeDMA();
//  241 #endif
//  242 #if HAL_UART_ISR
//  243   HalUARTResumeISR();
//  244 #endif
//  245 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock5
//  246 
//  247 /***************************************************************************************************
//  248  * @fn      HalUARTPoll
//  249  *
//  250  * @brief   Poll the UART.
//  251  *
//  252  * @param   none
//  253  *
//  254  * @return  none
//  255  *****************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  256 void HalUARTPoll(void)
HalUARTPoll:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function HalUARTPoll
//  257 {
        ; Saved register size: 0
        ; Auto size: 0
//  258 #if HAL_UART_DMA
//  259   HalUARTPollDMA();
//  260 #endif
//  261 #if HAL_UART_ISR
//  262   HalUARTPollISR();
//  263 #endif
//  264 }
        LJMP    ?BRET
        CFI EndBlock cfiBlock6
//  265 
//  266 /**************************************************************************************************
//  267  * @fn      Hal_UART_RxBufLen()
//  268  *
//  269  * @brief   Calculate Rx Buffer length - the number of bytes in the buffer.
//  270  *
//  271  * @param   port - UART port
//  272  *
//  273  * @return  length of current Rx Buffer
//  274  **************************************************************************************************/

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  275 uint16 Hal_UART_RxBufLen( uint8 port )
Hal_UART_RxBufLen:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function Hal_UART_RxBufLen
//  276 {
        ; Saved register size: 0
        ; Auto size: 0
//  277 #if (HAL_UART_DMA == 1)
//  278   if (port == HAL_UART_PORT_0)  return HalUARTRxAvailDMA();
//  279 #endif
//  280 #if (HAL_UART_DMA == 2)
//  281   if (port == HAL_UART_PORT_1)  return HalUARTRxAvailDMA();
//  282 #endif
//  283 #if (HAL_UART_ISR == 1)
//  284   if (port == HAL_UART_PORT_0)  return HalUARTRxAvailISR();
//  285 #endif
//  286 #if (HAL_UART_ISR == 2)
//  287   if (port == HAL_UART_PORT_1)  return HalUARTRxAvailISR();
//  288 #endif
//  289 
//  290 #if (HAL_UART_DMA == 0) && (HAL_UART_ISR == 0)
//  291   // UART is not enabled. Do nothing.
//  292   // Unused argument
//  293   (void) port;
//  294 #endif
//  295   return 0;
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock7
//  296 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTInit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTOpen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTOpen

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTRead?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTRead

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTWrite?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTWrite

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTSuspend?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTSuspend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTResume?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTResume

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??HalUARTPoll?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    HalUARTPoll

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Hal_UART_RxBufLen?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Hal_UART_RxBufLen

        END
//  297 
//  298 /******************************************************************************
//  299 ******************************************************************************/
// 
// 28 bytes in segment BANKED_CODE
// 48 bytes in segment BANK_RELAYS
// 
// 76 bytes of CODE memory
//
//Errors: none
//Warnings: none
